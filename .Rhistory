notnative.noteng$top.states <- rep(NA)
notnative.noteng$top.states <- ifelse(notnative.noteng$name == "California","California", notnative.noteng$top.states)
notnative.noteng$top.states <- ifelse(notnative.noteng$name == "Texas","Texas", notnative.noteng$top.states)
notnative.noteng$top.states <- ifelse(notnative.noteng$name == "New York","New York", notnative.noteng$top.states)
notnative.noteng$top.states <- ifelse(notnative.noteng$name == "Florida","Florida", notnative.noteng$top.states)
notnative.noteng$top.states <- ifelse(notnative.noteng$name == "New Jersey","New Jersey", notnative.noteng$top.states)
notnative.noteng$top.states <- ifelse(notnative.noteng$name == "Illinois","Illinois", notnative.noteng$top.states)
notnative.noteng$top.states <- ifelse(notnative.noteng$name == "Massachusetts","Massachusetts", notnative.noteng$top.states)
notnative.noteng$top.states <- ifelse(notnative.noteng$name == "Virginia","Virginia", notnative.noteng$top.states)
notnative.noteng.top.states <- na.omit(notnative.noteng)
notnative.noteng.top.states$rENG <- as.factor(notnative.noteng.top.states$rENG)
levels(notnative.noteng.top.states$rENG)
levels(notnative.noteng.top.states$rENG) <- c("Not at All","Not Well","Well","Very Well")
ggplot(notnative.noteng.top.states, aes(rENG, group=top.states)) +
geom_bar(aes(colour=top.states, fill=top.states), position=position_dodge(), alpha=0.9) +
xlab("Ability to Speak English") + ylab("Number of Respondents") +
ggtitle("English-Speaking Ability in Most Populous Immigrant States")  +
scale_fill_brewer(palette = "Paired") + scale_colour_brewer(palette = "Paired")  + theme(panel.background = element_rect(fill = "lightyellow"))
notnative.noteng %>%
group_by(LANP) %>%
summarize(
Count = n(),na.rm=TRUE) %>%
arrange(desc(Count))
notnative.noteng$top.LANP <- rep(NA)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Spanish","Spanish", notnative.noteng$top.LANP)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Chinese","Chinese", notnative.noteng$top.LANP)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Tagalog","Tagalog", notnative.noteng$top.LANP)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Vietnamese","Vietnamese", notnative.noteng$top.LANP)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Korean","Korean", notnative.noteng$top.LANP)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Russian","Russian", notnative.noteng$top.LANP)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Arabic","Arabic", notnative.noteng$top.LANP)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Hindi","Hindi", notnative.noteng$top.LANP)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Portuguese","Portuguese", notnative.noteng$top.LANP)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "German","German", notnative.noteng$top.LANP)
notnative.noteng.topLANP <- na.omit(notnative.noteng)
notnative.noteng.topLANP$rENG <- as.factor(notnative.noteng.topLANP$rENG)
levels(notnative.noteng.topLANP$rENG)
levels(notnative.noteng.topLANP$rENG) <- c("Not at All","Not Well","Well","Very Well")
ggplot(notnative.noteng.topLANP, aes(rENG, group=top.LANP)) +
geom_bar(aes(colour=top.LANP, fill=top.LANP), alpha=0.9) +
xlab("Ability to Speak English") + ylab("Number of Respondents") +
ggtitle("English-Speaking Ability by Most Common Languages Spoken At Home") +
scale_fill_brewer(palette = "Set1") + scale_colour_brewer(palette = "Set1") + theme(panel.background = element_rect(fill = "lightblue"))
notnative.noteng$top.LANP <- rep(NA)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Spanish","Spanish", notnative.noteng$top.LANP)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Chinese","Chinese", notnative.noteng$top.LANP)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Tagalog","Tagalog", notnative.noteng$top.LANP)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Vietnamese","Vietnamese", notnative.noteng$top.LANP)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Korean","Korean", notnative.noteng$top.LANP)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Russian","Russian", notnative.noteng$top.LANP)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Arabic","Arabic", notnative.noteng$top.LANP)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Hindi","Hindi", notnative.noteng$top.LANP)
notnative.noteng$top.LANP <- ifelse(notnative.noteng$LANP == "Portuguese","Portuguese", notnative.noteng$top.LANP)
notnative.noteng.topLANP <- na.omit(notnative.noteng)
notnative.noteng.topLANP$rENG <- as.factor(notnative.noteng.topLANP$rENG)
levels(notnative.noteng.topLANP$rENG)
levels(notnative.noteng.topLANP$rENG) <- c("Not at All","Not Well","Well","Very Well")
ggplot(notnative.noteng.topLANP, aes(rENG, group=top.LANP)) +
geom_bar(aes(colour=top.LANP, fill=top.LANP), alpha=0.9) +
xlab("Ability to Speak English") + ylab("Number of Respondents") +
ggtitle("English-Speaking Ability by Most Common Languages Spoken At Home") +
scale_fill_brewer(palette = "Set1") + scale_colour_brewer(palette = "Set1") + theme(panel.background = element_rect(fill = "lightblue"))
ggplot(notnative.noteng.topLANP, aes(rENG, group=top.LANP)) +
geom_bar(aes(colour=top.LANP, fill=top.LANP), alpha=0.9) +
xlab("Ability to Speak English") + ylab("Number of Respondents") +
ggtitle("English-Speaking Ability by Most Common Languages Spoken At Home") +
scale_fill_brewer(palette = "Set1") + scale_colour_brewer(palette = "Set1")
png("test")
ggplot(notnative.noteng) + geom_bar(aes(x=name), color= "black", fill="indianred") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8))) + xlab("U.S. State") + ylab("Number of Respondents") + ggtitle("In What States Do Immigrants from Non-English Speaking Countries Live?")
dev.off()
dev.off()
dev.off()
dev.on()
dev.on
dev.new()
dev.new()
png("test")
dev.off()
dev.new()
dev.off()
test <- dev.off()
test
dev.new
dev.new()
png("figs/states.png")
ggplot(notnative.noteng) + geom_bar(aes(x=name), color= "black", fill="indianred") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8))) + xlab("U.S. State") + ylab("Number of Respondents") + ggtitle("In What States Do Immigrants from Non-English Speaking Countries Live?")
dev.off()
png("figs/states2.png")
ggplot(notnative.noteng) + geom_bar(aes(x=name), color= "black", fill="indianred") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8))) + xlab("U.S. State") + ylab("Number of Respondents") + ggtitle("In What States Do Immigrants from Non-English Speaking Countries Live?")
dev.off()
source("lib/sri2116_functions.R")
population <- prepare_data()
states(population)
dev.off()
states(population)
states <- function(population){
notnative.noteng <- population
##In What States Do Immigrants from Non-English Speaking Countries Live?
png("figs/states1.png")
ggplot(notnative.noteng) + geom_bar(aes(x=name), color= "black", fill="indianred") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8))) + xlab("U.S. State") + ylab("Number of Respondents") + ggtitle("In What States Do Immigrants from Non-English Speaking Countries Live?")
#png("figs/sri2116_states.png")
#ggplot(notnative.noteng) + geom_bar(aes(x=name), color= "black", fill="indianred") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8))) + xlab("U.S. State") + ylab("Number of Respondents") + ggtitle("In What States Do Immigrants from Non-English Speaking Countries Live?")
dev.off()
# MIGHT NEED TO CALL DEV ON
}
states(population)
png("figs/states1.png")
ggplot(notnative.noteng) + geom_bar(aes(x=name), color= "black", fill="indianred") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8))) + xlab("U.S. State") + ylab("Number of Respondents") + ggtitle("In What States Do Immigrants from Non-English Speaking Countries Live?")
#png("figs/sri2116_states.png")
#ggplot(notnative.noteng) + geom_bar(aes(x=name), color= "black", fill="indianred") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8))) + xlab("U.S. State") + ylab("Number of Respondents") + ggtitle("In What States Do Immigrants from Non-English Speaking Countries Live?")
dev.off()
states <- function(population){
notnative.noteng <- population
##In What States Do Immigrants from Non-English Speaking Countries Live?
png("figs/states1.png")
ggplot(notnative.noteng) + geom_bar(aes(x=name), color= "black", fill="indianred") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8))) + xlab("U.S. State") + ylab("Number of Respondents") + ggtitle("In What States Do Immigrants from Non-English Speaking Countries Live?")
dev.off()
# MIGHT NEED TO CALL DEV ON
}
states(population)
notnative.noteng <- population
##In What States Do Immigrants from Non-English Speaking Countries Live?
png("figs/states1.png")
ggplot(notnative.noteng) + geom_bar(aes(x=name), color= "black", fill="indianred") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8))) + xlab("U.S. State") + ylab("Number of Respondents") + ggtitle("In What States Do Immigrants from Non-English Speaking Countries Live?")
dev.off()
states <- function(population){
notnative.noteng <- population
##In What States Do Immigrants from Non-English Speaking Countries Live?
png("figs/states1.png")
ggplot(notnative.noteng) + geom_bar(aes(x=name), color= "black", fill="indianred") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8))) + xlab("U.S. State") + ylab("Number of Respondents") + ggtitle("In What States Do Immigrants from Non-English Speaking Countries Live?")
dev.off()
# MIGHT NEED TO CALL DEV ON
}
states(population)
notnative.noteng <- population
##In What States Do Immigrants from Non-English Speaking Countries Live?
#png("figs/states1.png")
ggplot(notnative.noteng) + geom_bar(aes(x=name), color= "black", fill="indianred") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8))) + xlab("U.S. State") + ylab("Number of Respondents") + ggtitle("In What States Do Immigrants from Non-English Speaking Countries Live?")
dev.copy(png, "figs/states1.png")
dev.off()
states <- function(population){
notnative.noteng <- population
##In What States Do Immigrants from Non-English Speaking Countries Live?
#png("figs/states1.png")
ggplot(notnative.noteng) + geom_bar(aes(x=name), color= "black", fill="indianred") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8))) + xlab("U.S. State") + ylab("Number of Respondents") + ggtitle("In What States Do Immigrants from Non-English Speaking Countries Live?")
dev.copy(png, "figs/states1.png")
dev.off()
# MIGHT NEED TO CALL DEV ON
}
states(population)
states(population)
dev.off()
states(population)
dev.new()
states(population)
states(population)
states <- function(population){
notnative.noteng <- population
##In What States Do Immigrants from Non-English Speaking Countries Live?
#png("figs/states1.png")
ggplot(notnative.noteng) + geom_bar(aes(x=name), color= "black", fill="indianred") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8))) + xlab("U.S. State") + ylab("Number of Respondents") + ggtitle("In What States Do Immigrants from Non-English Speaking Countries Live?")
dev.copy(png, "figs/states1.png")
dev.off()
# MIGHT NEED TO CALL DEV ON
}
states(population)
dev.new()
dev()
dev.off()
states(population)
states <- function(population){
notnative.noteng <- population
##In What States Do Immigrants from Non-English Speaking Countries Live?
png("figs/states1.png")
ggplot(notnative.noteng) + geom_bar(aes(x=name), color= "black", fill="indianred") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8))) + xlab("U.S. State") + ylab("Number of Respondents") + ggtitle("In What States Do Immigrants from Non-English Speaking Countries Live?")
#dev.copy(png, "figs/states1.png")
dev.off()
# MIGHT NEED TO CALL DEV ON
}
states(population)
dev.new()
states <- function(population){
notnative.noteng <- population
##In What States Do Immigrants from Non-English Speaking Countries Live?
png("figs/states1.png")
ggplot(notnative.noteng) + geom_bar(aes(x=name), color= "black", fill="indianred") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8))) + xlab("U.S. State") + ylab("Number of Respondents") + ggtitle("In What States Do Immigrants from Non-English Speaking Countries Live?")
#dev.copy(png, "figs/states1.png")
dev.off()
# MIGHT NEED TO CALL DEV ON
}
states(population)
states <- function(population){
notnative.noteng <- population
##In What States Do Immigrants from Non-English Speaking Countries Live?
#png("figs/states1.png")
ggplot(notnative.noteng) + geom_bar(aes(x=name), color= "black", fill="indianred") + coord_flip() + theme(axis.text.y=element_text(size=rel(0.8))) + xlab("U.S. State") + ylab("Number of Respondents") + ggtitle("In What States Do Immigrants from Non-English Speaking Countries Live?")
#dev.copy(png, "figs/states1.png")
#dev.off()
# MIGHT NEED TO CALL DEV ON
}
states(population)
had_child_t_test <- function(pops){
######## T - test ########
png("output/ttest.png")
test<-t.test(pops$children, pops$nochildren)
print(test)
dev.off()
}
had_child_t_test(population)
prepare_data <- function(){
#### Gathering data ####
population <- fread("data/josh1.csv")
eng_speaking_countries <- fread("data/eng_speaking.csv")
# Contains .csv with only non-english speaking countries
non_eng_native <- select(filter(eng_speaking_countries, V3 == 1), V1, V2)
######## Sub population 1 ########
# Immigrants who have learned english since moving to the US in the last 12 months WITH CHILD
sub_pop_1 <- filter(population, NATIVITY == 2 & MIG == 2 & POBP %in% non_eng_native$V1 & FER == 1)
pop_children <- na.omit(as.numeric(sub_pop_1$ENG))
# Immigrants who have learned english since moving to the US in the last 12 months WITHOUT CHILD
sub_pop_2 <- filter(population, NATIVITY == 2 & MIG == 2 & POBP %in% non_eng_native$V1 & FER == 2)
pop_no_children <- na.omit(as.numeric(sub_pop_2$ENG))
pops <- list("children" = pop_children, "nochildren" = pop_no_children)
return(pops)
}
prepare_data(population)
population <- prepare_data()
had_child_t_test <- function(pops){
######## T - test ########
png("output/ttest.png")
test<-t.test(pops$children, pops$nochildren)
print(test)
dev.off()
}
had_child_t_test(population)
sink("output/ttest", append=FALSE, split=FALSE)
sink()
had_child_t_test <- function(pops){
######## T - test ########
sink("output/ttest", append=FALSE, split=FALSE)
t.test(pops$children, pops$nochildren)
sink()
}
had_child_t_test(population)
had_child_t_test(population)
had_child_t_test <- function(pops){
######## T - test ########
sink("output/ttest.txt", append=FALSE, split=FALSE)
t.test(pops$children, pops$nochildren)
sink()
}
had_child_t_test(population)
had_child_bar_chart <- function(pops){
# Graph stacked bar charts
plotframe <- data.frame(ability = c("Very Well", "Well", "Not Well", "Not at all"), child = c(prop.table(table(pops$children))), nochild = c(prop.table(table(pops$nochildren))))
# Plot bar chart
chart <- gvisColumnChart(plotframe, xvar="ability", yvar=c("child", "nochild"), options=list(isStacked=TRUE, title="Parents' Ability to Speak English Stacked By Birth of Child", vAxes="[{title:'Percent of Sub Population'}]", series="[{labelInLegend: 'Child'}, {labelInLegend: 'No child'}]"))
plot(chart)
#print(chart, "bar.png")
}
source("lib/jmd2228_functions.R")
population2 <- prepare_data()
had_child_t_test()
had_child_t_test(population2)
had_child_bar_chart <- function(pops){
# Graph stacked bar charts
plotframe <- data.frame(ability = c("Very Well", "Well", "Not Well", "Not at all"), child = c(prop.table(table(pops$children))), nochild = c(prop.table(table(pops$nochildren))))
# Plot bar chart
chart <- gvisColumnChart(plotframe, xvar="ability", yvar=c("child", "nochild"), options=list(isStacked=TRUE, title="Parents' Ability to Speak English Stacked By Birth of Child", vAxes="[{title:'Percent of Sub Population'}]", series="[{labelInLegend: 'Child'}, {labelInLegend: 'No child'}]"))
plot(chart)
}
had_child_bar_chart(population2)
source("lib/jmd2228_functions.R")
population2 <- prepare_data()
had_child_t_test(population2)
source("lib/jmd2228_functions.R")
pops <- prepare_data()
had_child_t_test(pops)
```
```{r, results='asis',tidy=FALSE}
# Graph stacked bar charts
plotframe <- data.frame(ability = c("Very Well", "Well", "Not Well", "Not at all"), child = c(prop.table(table(pops$children))), nochild = c(prop.table(table(pops$nochildren))))
# Plot bar chart
chart <- gvisColumnChart(plotframe, xvar="ability", yvar=c("child", "nochild"), options=list(isStacked=TRUE, title="Parents' Ability to Speak English Stacked By Birth of Child", vAxes="[{title:'Percent of Sub Population'}]", series="[{labelInLegend: 'Child'}, {labelInLegend: 'No child'}]"))
plot(chart)
population2 <- fread("data/josh2.csv")
attach("package:plyr", unload=FALSE)
attach("package:plyr")
attach("plyr")
library("plyr")
source("lib/jmd2228_functions.R")
population <- prepare_data()
had_child_t_test(population)
had_child_bar_chart <- function(pops){
# Graph stacked bar charts
plotframe <- data.frame(ability = c("Very Well", "Well", "Not Well", "Not at all"), child = c(prop.table(table(pops$children))), nochild = c(prop.table(table(pops$nochildren))))
# Plot bar chart
chart <- gvisColumnChart(plotframe, xvar="ability", yvar=c("child", "nochild"), options=list(isStacked=TRUE, title="Parents' Ability to Speak English Stacked By Birth of Child", vAxes="[{title:'Percent of Sub Population'}]", series="[{labelInLegend: 'Child'}, {labelInLegend: 'No child'}]"))
plot(chart)
#print(chart, "bar.png")
}
had_child_bar_chart(population)
plotframe <- data.frame(ability = c("Very Well", "Well", "Not Well", "Not at all"), child = c(prop.table(table(population$children))), nochild = c(prop.table(table(population$nochildren))))
# Plot bar chart
chart <- gvisColumnChart(plotframe, xvar="ability", yvar=c("child", "nochild"), options=list(isStacked=TRUE, title="Parents' Ability to Speak English Stacked By Birth of Child", vAxes="[{title:'Percent of Sub Population'}]", series="[{labelInLegend: 'Child'}, {labelInLegend: 'No child'}]"))
plot(chart)
plot(chart)
prepare_data <- function(){
#### Gathering data ####
population <- fread("data/josh1.csv")
eng_speaking_countries <- fread("data/eng_speaking.csv")
# Contains .csv with only non-english speaking countries
non_eng_native <- select(filter(eng_speaking_countries, V3 == 1), V1, V2)
######## Sub population 1 ########
# Immigrants who have learned english since moving to the US in the last 12 months WITH CHILD
sub_pop_1 <- filter(population, NATIVITY == 2 & MIG == 2 & POBP %in% non_eng_native$V1 & FER == 1)
pop_children <- na.omit(as.numeric(sub_pop_1$ENG))
# Immigrants who have learned english since moving to the US in the last 12 months WITHOUT CHILD
sub_pop_2 <- filter(population, NATIVITY == 2 & MIG == 2 & POBP %in% non_eng_native$V1 & FER == 2)
pop_no_children <- na.omit(as.numeric(sub_pop_2$ENG))
pops <- list("children" = pop_children, "nochildren" = pop_no_children)
return(pops)
}
prepare_data2 <- function(){
population <- fread("data/josh2.csv")
#eng_speaking_countries <- fread("data/eng_speaking.csv")
# Children's ability to speak english
sub_pop_3 <- select(population, ENG, NOP, NATIVITY, AGEP)
sub_pop_3 <- subset(sub_pop_3, NATIVITY == 1 & AGEP <= 18)
sub_pop_3 <- select(sub_pop_3, ENG, NOP)
return(sub_pop_3)
}
had_child_t_test <- function(pops){
######## T - test ########
t.test(pops$children, pops$nochildren)
}
had_child_bar_chart <- function(pops){
# Graph stacked bar charts
plotframe <- data.frame(ability = c("Very Well", "Well", "Not Well", "Not at all"), child = c(prop.table(table(pops$children))), nochild = c(prop.table(table(pops$nochildren))))
# Plot bar chart
chart <- gvisColumnChart(plotframe, xvar="ability", yvar=c("child", "nochild"), options=list(isStacked=TRUE, title="Parents' Ability to Speak English Stacked By Birth of Child", vAxes="[{title:'Percent of Sub Population'}]", series="[{labelInLegend: 'Child'}, {labelInLegend: 'No child'}]"))
plot(chart)
#print(chart, "bar.png")
}
childs_parents_nativity <- function(sub_pop_3){
#### Gathering data ####
#population <- fread("data/josh2.csv")
#eng_speaking_countries <- fread("data/eng_speaking.csv")
# Children's ability to speak english
#sub_pop_3 <- select(population, ENG, NOP, NATIVITY, AGEP)
#sub_pop_3 <- subset(sub_pop_3, NATIVITY == 1 & AGEP <= 18)
#sub_pop_3 <- select(sub_pop_3, ENG, NOP)
childframe <- data.frame(id = as.numeric(sub_pop_3$ENG), parent = as.numeric(sub_pop_3$NOP), childsize = c(rep(1,length(sub_pop_3$ENG))), fac = as.numeric(sub_pop_3$ENG))
childframe <- na.omit(childframe)
childframe <- aggregate(childframe$childsize, by=list(childframe$parent, childframe$id), sum)
childframe <- data.frame(id = childframe$Group.2, parent = childframe$Group.1, childsize = childframe$x, fac = childframe$x)
for(i in 1:dim(childframe)[1]){
if (childframe$parent[i] == 1){
childframe$parent[i] = "Both Native"
} else if (childframe$parent[i] == 2){
childframe$parent[i] = "Father Foreign"
} else if (childframe$parent[i] == 3){
childframe$parent[i] = "Mother Foreign"
} else if (childframe$parent[i] == 4){
childframe$parent[i] = "Both Foreign"
} else if (childframe$parent[i] == 5){
childframe$parent[i] = "Only Father, Native"
} else if (childframe$parent[i] == 6){
childframe$parent[i] = "Only Father, Foreign"
} else if (childframe$parent[i] == 7){
childframe$parent[i] = "Only Mother, Native"
} else {
childframe$parent[i] = "Only Mother, Foreign"
}
if (childframe$id[i] == 1){
childframe$id[i] = paste("Very Well Count:", childframe$childsize[i])
} else if (childframe$id[i] == 2){
childframe$id[i] = paste("Well Count:", childframe$childsize[i])
} else if (childframe$id[i] == 3){
childframe$id[i] = paste("Not well Count:", childframe$childsize[i])
} else {
childframe$id[i] = paste("Not at all Count:", childframe$childsize[i])
}
}
# Analysis Population 2
childframe <- rbind(c("TOP",NA,10, 2), childframe)
childframe <- rbind(c("Both Native","TOP",5, 4), childframe)
childframe <- rbind(c("Father Foreign","TOP",5, 5), childframe)
childframe <- rbind(c("Mother Foreign","TOP",5, 6), childframe)
childframe <- rbind(c("Both Foreign","TOP",5, 7), childframe)
childframe <- rbind(c("Only Father, Native","TOP",5, 8), childframe)
childframe <- rbind(c("Only Father, Foreign","TOP",5, 9), childframe)
childframe <- rbind(c("Only Mother, Native","TOP",5, 10), childframe)
childframe <- rbind(c("Only Mother, Foreign","TOP",5, 11), childframe)
childframe$id[36] = "Not at all Count: 9"
tree <- gvisTreeMap(childframe,  idvar="id", parentvar="parent", sizevar="childsize", colorvar="fac", options=list(minColor='#EDF8FB',midColor='#66C2A4',maxColor='#006D2C'))
plot(tree)
}
source("lib/cj2452_functions.R")
population <- prepare_data()
Eng_Pie(population)
Time_Series(population)
Sex_Decades(population)
detach("package:plyr", unload=TRUE)
library(plyr)
detach("package:plyr", unload=TRUE)
detach("package:reshape", unload=TRUE)
detach("package:ggplot2", unload=TRUE)
detach("package:plyr", unload=TRUE)
detach("pylr", unload=TRUE)
library(plyr)
detach("package:plyr", unload=TRUE)
detach("package:scales", unload=TRUE)
detach("scales", unload=TRUE)
detach("package:ggplot2", unload=TRUE)
detach("scales", unload=TRUE)
detach("pylr", unload=TRUE)
detach("package:reshape", unload=TRUE)
library(survey)
library(ggplot2)
library(plyr)
detach("package:plyr", unload=TRUE)
library(dplyr)
library(reshape)
library(plotrix)
library(RColorBrewer)
library(wordcloud)
library(tm)
library("plyr")
library(data.table)
library(plyr)
library(dplyr)
detach("package:plyr", unload=TRUE)
library(plyr)
library(data.table)
library(plyr)
library(dplyr)
source("lib/sri2116_functions.R")
population <- prepare_data()
states(population)
popular_languages(population)
common_languages(population)
detach("package:plyr", unload=TRUE)
common_languages(population)
common_states(population)
library("plyr")
source("lib/jmd2228_functions.R")
population <- prepare_data()
population2 <- prepare_data2()
```
```{r}
had_child_t_test(population)
plotframe <- data.frame(ability = c("Very Well", "Well", "Not Well", "Not at all"), child = c(prop.table(table(population$children))), nochild = c(prop.table(table(population$nochildren))))
# Plot bar chart
chart <- gvisColumnChart(plotframe, xvar="ability", yvar=c("child", "nochild"), options=list(isStacked=TRUE, title="Parents' Ability to Speak English Stacked By Birth of Child", vAxes="[{title:'Percent of Sub Population'}]", series="[{labelInLegend: 'Child'}, {labelInLegend: 'No child'}]"))
plot(chart)
sub_pop_3 <- population2
childframe <- data.frame(id = as.numeric(sub_pop_3$ENG), parent = as.numeric(sub_pop_3$NOP), childsize = c(rep(1,length(sub_pop_3$ENG))), fac = as.numeric(sub_pop_3$ENG))
childframe <- na.omit(childframe)
childframe <- aggregate(childframe$childsize, by=list(childframe$parent, childframe$id), sum)
childframe <- data.frame(id = childframe$Group.2, parent = childframe$Group.1, childsize = childframe$x, fac = childframe$x)
for(i in 1:dim(childframe)[1]){
if (childframe$parent[i] == 1){
childframe$parent[i] = "Both Native"
} else if (childframe$parent[i] == 2){
childframe$parent[i] = "Father Foreign"
} else if (childframe$parent[i] == 3){
childframe$parent[i] = "Mother Foreign"
} else if (childframe$parent[i] == 4){
childframe$parent[i] = "Both Foreign"
} else if (childframe$parent[i] == 5){
childframe$parent[i] = "Only Father, Native"
} else if (childframe$parent[i] == 6){
childframe$parent[i] = "Only Father, Foreign"
} else if (childframe$parent[i] == 7){
childframe$parent[i] = "Only Mother, Native"
} else {
childframe$parent[i] = "Only Mother, Foreign"
}
if (childframe$id[i] == 1){
childframe$id[i] = paste("Very Well Count:", childframe$childsize[i])
} else if (childframe$id[i] == 2){
childframe$id[i] = paste("Well Count:", childframe$childsize[i])
} else if (childframe$id[i] == 3){
childframe$id[i] = paste("Not well Count:", childframe$childsize[i])
} else {
childframe$id[i] = paste("Not at all Count:", childframe$childsize[i])
}
}
# Analysis Population 2
childframe <- rbind(c("TOP",NA,10, 2), childframe)
childframe <- rbind(c("Both Native","TOP",5, 4), childframe)
childframe <- rbind(c("Father Foreign","TOP",5, 5), childframe)
childframe <- rbind(c("Mother Foreign","TOP",5, 6), childframe)
childframe <- rbind(c("Both Foreign","TOP",5, 7), childframe)
childframe <- rbind(c("Only Father, Native","TOP",5, 8), childframe)
childframe <- rbind(c("Only Father, Foreign","TOP",5, 9), childframe)
childframe <- rbind(c("Only Mother, Native","TOP",5, 10), childframe)
childframe <- rbind(c("Only Mother, Foreign","TOP",5, 11), childframe)
childframe$id[36] = "Not at all Count: 9"
tree <- gvisTreeMap(childframe,  idvar="id", parentvar="parent", sizevar="childsize", colorvar="fac", options=list(minColor='#EDF8FB',midColor='#66C2A4',maxColor='#006D2C'))
plot(tree)
source("lib/cj2452_functions.R")
detach("package:pylr", unload=TRUE)
unloadNamespace("pylr")
detach("package:plyr", unload=TRUE)
population <- prepare_data()
Eng_Pie(population)
Time_Series(population)
Sex_Decades(population)
Age_Decades(population)
rm(list=ls())
